rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Base rules - deny all by default
    match /{document=**} {
      allow read, write: if false;
    }
    
    // User profiles - users can read all profiles but only edit their own
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Wine lists - users can only access their own wine lists
    match /wineLists/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Individual wine entries in a user's list
      match /wines/{wineId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Wine ratings - users can read all ratings but only modify their own
    match /ratings/{ratingId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Public data like wine information
    match /wines/{wineId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.admin == true;
    }
    
    // Processing status - users can only access their own processing jobs
    match /processing/{jobId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
  }
}